---

- name: ensure ~/.local/bin exists
  file:
    state: directory
    path: "~/.local/bin"

- name: ensure ~/.kube exists
  file:
    state: directory
    path: "~/.kube"

- name: ensure {{ archives_dir }} exists
  file:
    state: directory
    path: "{{ archives_dir }}"

- uri:
    url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
    return_content: yes
  register: kubectl_stable_version

- debug:
    var: kubectl_stable_version

- name: fetch kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_stable_version.content.strip() }}/bin/linux/amd64/kubectl
    dest: "~/.local/bin/kubectl"
    mode: u+rx

- name: install os package dependencies
  package:
    name:
      - gcc
      - git
      - python-virtualenv
      - tmux
  become: true

- name: create openstack venv
  pip:
    name:
      - pip
    state: latest
    virtualenv: ~/venv-openstack

- name: install pip packages
  pip:
    name:
      - python-openstackclient
      - python-magnumclient
    virtualenv: ~/venv-openstack

- name: ensure ~/.config/openstack exists
  file:
    path: ~/.config/openstack
    state: directory

- name: copy over clouds.yaml
  copy:
    src: ~/.config/openstack/clouds.yaml
    dest: ~/.config/openstack/clouds.yaml

- name: set os_cloud environment variable
  lineinfile:
    path: ~/.bashrc
    state: present
    regexp: '^export OS_CLOUD='
    line: 'export OS_CLOUD=default'

- name: stat kube config
  stat:
    path: ~/.kube/config
  register: kube_config

- name: create kube config
  shell: ~/venv-openstack/bin/openstack coe cluster config "{{ cluster_name }}" --dir ~/.kube
  environment: "{{ openstack_auth_env }}"
  when: not kube_config.stat.exists

